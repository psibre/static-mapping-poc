import groovy.json.JsonSlurper

plugins {
    id 'groovy'
}

repositories {
    jcenter()
}

dependencies {
    compile localGroovy()
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
}

tasks.register 'generateSrc', GenerateSource, {
    srcFile = file('fooBar.json')
    destDir = layout.buildDirectory.dir('generatedSrc')
}

test {
    useTestNG()
}

class GenerateSource extends DefaultTask {

    @InputFile
    final RegularFileProperty srcFile = newInputFile()

    @OutputDirectory
    final DirectoryProperty destDir = newOutputDirectory()

    @TaskAction
    void generate() {
        def mapping = new JsonSlurper().parse(srcFile.get().asFile)
        def className = (srcFile.get().asFile.name - '.json').capitalize()
        destDir.file(className + '.groovy').get().asFile.withWriter { writer ->
            writer.println "class $className {"
            mapping.each { key, value ->
                writer.println "    static Map get${key.capitalize()}() {"
                writer.println "        $value"
                writer.println "    }"
            }
            writer.println "}"
        }
    }
}
